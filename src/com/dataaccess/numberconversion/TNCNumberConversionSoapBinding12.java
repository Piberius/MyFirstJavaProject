
package com.dataaccess.numberconversion;
//------------------------------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 9.3.3.2
//
// Created by Quasar Development 
//
// This class has been generated for test purposes only and cannot be used in any commercial project.
// To use it in commercial project, you need to generate this class again with Premium account.
// Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
//
// Licence: 44320FAD386DA46A43B846174BF0C787A0BEAD3EA49E327B18C4E49B709A495619D85DAA80DA2EF334333891530F32B24492F7F7645997EB21BDBF1272FE242B
//------------------------------------------------------------------------

import java.util.*;


public class TNCNumberConversionSoapBinding12
{
    private String url = "https://www.dataaccess.com/webservicesserver/numberconversion.wso";
    private HashMap< String,String> httpHeaders = new HashMap< String,String>();
    private boolean enableLogging = false;
    private String userName=null;
    private String password=null;
    private TNCConnectionProvider connectionProvider=new TNCHttpConnectionProvider();

    public TNCNumberConversionSoapBinding12()
    {
    }

    public TNCNumberConversionSoapBinding12(String url)
    {
        this.url=url;
    }

    public TNCNumberConversionSoapBinding12 (String url,TNCConnectionProvider connectionProvider) {
        this.url=url;
        this.connectionProvider=connectionProvider;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public HashMap<String, String> getHttpHeaders() {
        return httpHeaders;
    }

    public boolean isLoggingEnabled() {
        return enableLogging;
    }

    public void setLoggingEnabled(boolean enableLogging) {
        this.enableLogging = enableLogging;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
    

    
    protected TNCRequestResultHandler createRequestResultHandler()
    {
        TNCRequestResultHandler handler = new TNCRequestResultHandler(TNCSoapVersion.v1_2);
        return handler;
    }
    
    private org.w3c.dom.Document createNumberToWordsRequest(final Long ubiNum,TNCRequestResultHandler __handler) throws java.lang.Exception
    {
        org.w3c.dom.Document __xml=__handler.createEnvelopeXml();
        org.w3c.dom.Element __mainNode=__handler.writeElement("http://www.dataaccess.com/webservicesserver/","NumberToWords",__xml);
        __handler.getBody().appendChild(__mainNode);

        org.w3c.dom.Element __ubiNumItemElement=__handler.writeElementWithType(ubiNum,Long.class, "ubiNum", "http://www.dataaccess.com/webservicesserver/", __mainNode, false);
        if(__ubiNumItemElement != null)
        {
            __ubiNumItemElement.setTextContent(ubiNum.toString());
        }
        __handler.finishEnvelopeXml(__xml);
        return __xml;
    }
    
    public String NumberToWords(final Long ubiNum) throws java.lang.Exception
    {
        TNCRequestResultHandler __handler =createRequestResultHandler();
        org.w3c.dom.Document __xml=createNumberToWordsRequest(ubiNum, __handler);
        sendRequest("",__xml,__handler);
        org.w3c.dom.Node __result=TNCHelper.getResult(__handler.getOutputBody(), "NumberToWordsResult",false);
        if(__result!=null)
        {
            return ((org.w3c.dom.Element)__result).getTextContent();
        }
        return null;
    }
    private org.w3c.dom.Document createNumberToDollarsRequest(final String dNum,TNCRequestResultHandler __handler) throws java.lang.Exception
    {
        org.w3c.dom.Document __xml=__handler.createEnvelopeXml();
        org.w3c.dom.Element __mainNode=__handler.writeElement("http://www.dataaccess.com/webservicesserver/","NumberToDollars",__xml);
        __handler.getBody().appendChild(__mainNode);

        org.w3c.dom.Element __dNumItemElement=__handler.writeElementWithType(dNum,String.class, "dNum", "http://www.dataaccess.com/webservicesserver/", __mainNode, false);
        if(__dNumItemElement != null)
        {
            __dNumItemElement.setTextContent(dNum.toString());
        }
        __handler.finishEnvelopeXml(__xml);
        return __xml;
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    public String NumberToDollars(final String dNum) throws java.lang.Exception
    {
        
/*This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.*/
        throw new UnsupportedOperationException("This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.");
    }
    protected void sendRequest(String soapAction,org.w3c.dom.Document soapBody, TNCRequestResultHandler handler) throws java.lang.Exception
    {
        HashMap< String,String> __headers = new HashMap<>();
        __headers.putAll(httpHeaders);
        __headers.put("SOAPAction",soapAction);        
        String __contentType="application/soap+xml";
        __headers.put("content-type",__contentType+";charset=UTF-8");
        if (userName != null)
        {
            String authStr = userName+":"+password;
            String data=Base64.getEncoder().encodeToString(authStr.getBytes(java.nio.charset.StandardCharsets.UTF_8));
            String authValue = "Basic "+data;
            __headers.put("authorization",authValue);
        }
        String __requestBody=TNCHelper.getStringFromDocument(soapBody);
        if(enableLogging)
        {
            System.out.println("requestDump: "+__requestBody);
        }
        TNCResponseData response=connectionProvider.sendRequest(url,__requestBody, __headers,handler, __contentType);
        if(enableLogging)
        {
             System.out.println("responseDump: "+response.getBody());
        }
        handler.setResponse(response);
    }
}
